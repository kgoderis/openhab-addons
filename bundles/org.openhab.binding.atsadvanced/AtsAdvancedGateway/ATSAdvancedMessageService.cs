// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.17020
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

// 
// This source code was auto-generated by Web Services Description Language Utility
//Mono Framework v4.0.30319.17020
//


/// <remarks/>
[System.Web.Services.WebServiceBinding(Name="ATSAdvancedPort", Namespace="ATSAdvanced.DTO")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ATSAdvancedMessageService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback sendMessageOperationCompleted;
    
    public ATSAdvancedMessageService() {
        this.Url = "http://localhost:9090/ATSAdvancedPort";
    }
    
    public event sendMessageCompletedEventHandler sendMessageCompleted;
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:SendMessage", RequestNamespace="ATSAdvanced.DTO", ResponseNamespace="ATSAdvanced.DTO", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("response", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public message sendMessage([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] message message) {
        object[] results = this.Invoke("sendMessage", new object[] {
                    message});
        return ((message)(results[0]));
    }
    
    public System.IAsyncResult BeginsendMessage(message message, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("sendMessage", new object[] {
                    message}, callback, asyncState);
    }
    
    public message EndsendMessage(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((message)(results[0]));
    }
    
    public void sendMessageAsync(message message) {
        this.sendMessageAsync(message, null);
    }
    
    public void sendMessageAsync(message message, object userState) {
        if ((this.sendMessageOperationCompleted == null)) {
            this.sendMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMessageCompleted);
        }
        this.InvokeAsync("sendMessage", new object[] {
                    message}, this.sendMessageOperationCompleted, userState);
    }
    
    private void OnsendMessageCompleted(object arg) {
        if ((this.sendMessageCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.sendMessageCompleted(this, new sendMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="ATSAdvanced.DTO")]
public partial class message {
    
    private string nameField;
    
    private property[] propertiesField;
    
    private bool validField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("properties", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public property[] properties {
        get {
            return this.propertiesField;
        }
        set {
            this.propertiesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool valid {
        get {
            return this.validField;
        }
        set {
            this.validField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="ATSAdvanced.DTO")]
public partial class property {
    
    private string idField;
    
    private int indexField;
    
    private object valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int index {
        get {
            return this.indexField;
        }
        set {
            this.indexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

public partial class sendMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal sendMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public message Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((message)(this.results[0]));
        }
    }
}

public delegate void sendMessageCompletedEventHandler(object sender, sendMessageCompletedEventArgs args);
